@using Iris.DAL;
@using Iris.Models;

@{
    ViewBag.Title = "Τροποπ. αναθέσεις AK αναπληρωτών";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }
</style>

    @Html.AntiForgeryToken()
    <div class="page-header" style="margin:5px 30px 5px 30px">
        <span style="margin:5px 30px 5px 0px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
            <font style="color:#494949;font-family:'Segoe UI'">Τροποποιητικές αναθέσεις ασθένειας-κυήσεως αναπληρωτών</font>
        </span>
        <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "School", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>       
        <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση νέων", "AnatheseisModifyAnAKPrint", "School", null, new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
        <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>


<div class="body-content" style="margin:10px 30px 5px 30px;font-size:14px;background-color:dimgray;padding:4px 4px 4px 4px">
    <label style="font-size:14px;font-weight:bold;color:white">Σχολικό έτος : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlSchoolYear")
        .DataTextField("ΣΧΟΛΙΚΟ_ΕΤΟΣ")
        .DataValueField("SCHOOLYEAR_ID")
        .HtmlAttributes(new { style = "width:230px;font-size:14px;font-weight:bold" })
        .OptionLabel("Επιλογή...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetSchoolYears", "School"); }).ServerFiltering(true); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
</div>

<div class="body-content" style="margin:5px 30px 5px 30px;font-size:small">
    @(Html.Kendo().Grid<AnathesiModifyAnaplirotesAKViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.ΑΦΜ).Width(14).Groupable(false);
            columns.Bound(c => c.ΕΠΩΝΥΜΟ).Width(26).Groupable(false)
                .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.ΟΝΟΜΑ).Width(22).Groupable(false);
            columns.Bound(c => c.ΠΑΤΡΩΝΥΜΟ).Width(18).Groupable(false).Filterable(false);
            columns.ForeignKey(f => f.ΕΙΔΙΚΟΤΗΤΑ_ΚΩΔ, (IEnumerable<sqlEIDIKOTITES>)ViewData["eidikotites"], "ΚΩΔΙΚΟΣ", "ΕΙΔΙΚΟΤΗΤΑ").Width(44);
            columns.Bound(c => c.ΩΡΕΣ_ΕΒΔ_ΑΠΟ).Width(10).Groupable(false).Filterable(false);
            columns.Bound(c => c.ΩΡΕΣ_ΕΒΔ_ΣΕ).Width(10).Groupable(false).Filterable(false);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(35);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
        })
        .Groupable()
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Navigatable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .Filterable()
        .HtmlAttributes(new { style = "display: block;font-size:12px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(360))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΑΝΑΘΕΣΗ_ΚΩΔ);
                model.Field(p => p.ΕΙΔΙΚΟΤΗΤΑ_ΚΩΔ).DefaultValue(ViewData["defaultEidikotita"]);
                model.Field(p => p.ΩΡΕΣ_ΕΒΔ_ΑΠΟ).DefaultValue(0);
                model.Field(p => p.ΩΡΕΣ_ΕΒΔ_ΣΕ).DefaultValue(0);
            })
            .Create(create => create.Action("AnathesiModifyANAK_Create", "School").Data("data"))
            .Read(read => read.Action("AnathesiModifyANAK_Read", "School").Data("data"))
            .Update(update => update.Action("AnathesiModifyANAK_Update", "School").Data("data"))
            .Destroy(destroy => destroy.Action("AnathesiModifyANAK_Destroy", "School"))
            .Aggregates(a =>
            {
                a.Add(p => p.ΕΠΩΝΥΜΟ).Count();
            })
            .Events(events => events.Error("error_handler"))
        )
    )
</div>

<script type="text/javascript">

    function ddlselect(e) {
        var dataItem = this.dataItem(e.item.index());

        if (dataItem) {
            var syearID = dataItem.SCHOOLYEAR_ID;
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: syearID });
            $("#Grid").css("display", "block");
        }
        else {
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: 0 });
            $("#Grid").css("display", "block");
        }
    };

    function data() {
        var syearID = $("#ddlSchoolYear").data("kendoDropDownList").value();

        if (syearID) {
            return { schoolyearId: syearID }
        }
        else {
            return { schoolyearId: 0 }
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

</script>
