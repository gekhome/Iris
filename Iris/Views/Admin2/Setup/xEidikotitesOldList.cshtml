@model IEnumerable<Iris.Models.SysEidikotitesOldViewModel>
@using Iris.DAL;
@using Iris.Models;


@{
    ViewBag.Title = "Παλαιές ειδικότητες";
    Layout = "~/Views/Shared/_Admin2Layout.cshtml";
}

@*<style>
    .k-grid .k-alt {
        background-color: #e9e9e9; /* specify the alternate background-color */
    }
</style>*@


    @Html.AntiForgeryToken()
    <div class="page-header" style="margin:5px 30px 5px 30px">
        <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
            <font style="color:#494949;float:left;font-family:'Segoe UI'">Παλαιό κωδικολόγιο ειδικοτήτων εκπαιδευτών</font>
        </span>
        <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin2", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
        <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "xEidikotitesOldPrint", "Setup", null, new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
    </div>

    <div class="body-content" style="margin:10px 30px 5px 30px">

        @(Html.Kendo().Grid(Model)
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(m => m.ΕΙΔΙΚΟΤΗΤΑ_ΚΩΔΙΚΟΣ).Width(15);
            columns.Bound(m => m.ΕΙΔΙΚΟΤΗΤΑ_ΛΕΚΤΙΚΟ).Groupable(false).Width(80)
                .ClientFooterTemplate("Συνολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.ForeignKey(f => f.ΚΛΑΔΟΣ, (IEnumerable<ΣΥΣ_ΚΛΑΔΟΙ>)ViewData["kladoi"], "ΚΛΑΔΟΣ_ΚΩΔ", "ΚΛΑΔΟΣ").Width(15);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(34);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
        })
        .HtmlAttributes(new { style = "font-size:13px" })
        .Filterable()
        .Groupable()
        .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(380))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .DataSource(datasource => datasource
            .Ajax()
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΚΩΔΙΚΟΣ);
                model.Field(p => p.ΚΛΑΔΟΣ).DefaultValue(1);
            })
            .Create(create => create.Action("EidikotitaOld_Create", "Setup"))
            .Read(read => read.Action("EidikotitaOld_Read", "Setup"))
            .Update(update => update.Action("EidikotitaOld_Update", "Setup"))
            .Destroy("EidikotitaOld_Destroy", "Setup")
            .Events(events => events.Error("error_handler"))                       
            .Aggregates(a =>
            {
                a.Add(p => p.ΕΙΔΙΚΟΤΗΤΑ_ΛΕΚΤΙΚΟ).Count();
            })
        ) @* datasource*@
        )

    </div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            RefreshGrid(e);
        }
    }

</script>

