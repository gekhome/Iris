@model IEnumerable<Iris.Models.SysReportViewModel>

@{
    ViewBag.Title = "Αναλυτικές εκθέσεις";
    Layout = "~/Views/Shared/_Admin2Layout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }
</style>

    @Html.AntiForgeryToken()
    <div class="page-header" style="margin:5px 30px 5px 30px">
        <span style="margin:5px 30px 5px 0px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
            <font style="color:#494949;font-family:'Segoe UI'">Εκθέσεις αναλυτικών στοιχείων</font>
        </span>
        <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin2", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>     
        <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>

    <div class="body-content" style="margin:10px 30px 5px 30px">

        @(Html.Kendo().Grid(Model)
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(m => m.DOC_NAME).FooterTemplate(@<text>Σύνολο Πλήθος: @item.Count</text>).Width(40);
            columns.Bound(m => m.DOC_DESCRIPTION).Width(120);
            //columns.Bound(m => m.DOC_CLASS).Width(16);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("ReportSelectorDetail", "Admin2") + "?reportId=#=DOC_ID#' target = _blank><span class=\"k-icon k-justifyFull\"></span>Εκτύπωση</a>"
            ).Width(22);
        })
        .HtmlAttributes(new { style = "font-size:13px" })
        .Navigatable()
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(400))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .Batch(false)
        .PageSize(40)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.DOC_ID);
        })
        .Read(read => read.Action("ReportsDetail_Read", "Admin2"))
        .Events(events => events.Error("error_handler"))
        .Aggregates(a =>
            {
                a.Add(p => p.DOC_NAME).Count();
            })

        ) @* datasource*@
        )

    </div>

<script type="text/javascript">

    function error_handler(e) {
        if (e.errors) {
            var message = "Σφάλμα:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

</script>

@*<script>

        $(document).ready(function () {
          $("#years").change(function () {
              var url = '@Url.Content("~/")' + "Experience/IncomeYear_SelectedYear";
              var ddlsource = "#years";
              var ddltarget = "#taxfree";
              $.getJSON(url, { selected_year: $(ddlsource).val() }, function (data) {
              $(ddltarget).empty();
              $(ddltarget).val(data);
            });
          });
        });
    </script>*@
